{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,qBACjCC,QAASF,SAASC,cAAc,oBAChCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,UAejC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArBbT,EAAKM,OAAOW,iBAAiB,UAE7B,SAAmBC,GACjBA,EAAMC,iBACN,MAAMC,EAAYC,SAASrB,EAAKC,SAASqB,OACnCC,EAAOF,SAASrB,EAAKI,QAAQkB,OAC7BE,EAASH,SAASrB,EAAKK,UAAUiB,OACjCG,EAAO,C,UAAEL,E,KAAWG,E,OAAMC,GAChCE,QAAQC,IAAIF,GAiBd,UAAuBL,UAAEA,EAASG,KAAEA,EAAIC,OAAEA,IACxC,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAAG,CAGlCrB,EAFeqB,EAAI,EACPR,EAAYQ,EAAIL,GAEzBM,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBX,EAAAgC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBX,EAAAgC,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G,EAzBlEyB,CAAcT,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inpDelay: document.querySelector('input[name=delay]'),\n  inpStep: document.querySelector('input[name=step]'),\n  inpAmount: document.querySelector('input[name=amount]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', getValues);\n\nfunction getValues(event) {\n  event.preventDefault();\n  const dataDelay = parseInt(refs.inpDelay.value);\n  const step = parseInt(refs.inpStep.value);\n  const amount = parseInt(refs.inpAmount.value);\n  const data = { dataDelay, step, amount };\n  console.log(data);\n  promiseCaller(data);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseCaller({ dataDelay, step, amount }) {\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delay = dataDelay + i * step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","inpDelay","document","querySelector","inpStep","inpAmount","formEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","dataDelay","parseInt","value","step","amount","data","console","log","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$promiseCaller"],"version":3,"file":"03-promises.7cad34fe.js.map"}